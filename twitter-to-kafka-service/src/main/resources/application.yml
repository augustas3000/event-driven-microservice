spring:
  application:
    name: twitter-to-kafka-service
  config:
    import: "optional:configserver:http://localhost:8888"
  cloud:
    config:
      username: ENC(z4AqSjlRRK91Lqm1Ui9h7pGUyY2SBe89+lSVmEqIFv7GcFkexLk8l8dvEZb5lSWZk2KBIrnkDtzWQFDbiDcSXQ==)
      password: ENC(HkKz5SeBgOnFia4uOXuf5oOlnVTLnaaZlg1gww/5DqGo+eFUmrLpSiRqFyp9Zyew/OD4GcRX3hvml/URhf1Cyg==)
#  cloud:
#      name: twitter-to-kafka-service,config-client
#      uri: http://localhost:8888

#twitter-to-kafka-service:
#  twitter-keywords:
#    - Java
#    - Microservices
#    - Spring
#    - Kafka
#    - Elasticsearch
#  enable-mock-tweets: false
#  mock-min-tweet-length: 5
#  mock-max-tweet-length: 15
#  mock-sleep-ms: 10000
#retry-config:
#  initial-interval-ms: 1000
#  max-interval-ms: 10000
#  multiplier: 2.0
#  max-attempts: 3
#  sleep-time-ms: 2000
#kafka-config:
#  # hostnames from docker compose file
#  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
#  schema-registry-url-key: schema.registry.url
#  schema-registry-url: http://localhost:8081
#  topic-name: twitter-topic
#  topic-names-to-create:
#    - twitter-topic
#  number-of-partitions: 3
#  replication-factor: 3
#kafka-producer-config:
#  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
#  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
#  compression-type: snappy
#  acks: all
#  batch-size: 16384
#  batch-size-boost-factor: 100
#  linger-ms: 5
#  request-timeout-ms: 60000
#  retry-count: 5
#logging:
#  level:
#    twitter4j: DEBUG
#
#twitter4j:
#  oauth:
#    consumer-key: ENC(Kh89YR/RBO9gEQsrnxt9qJG6oowauPZ4gJrRcYLEcNG4EtM/nPUw8lmrJ7OggmoZ2NkVuN40vVY/Noa2Go/v7Q==)
#    consumer-secret: ENC(xMUxqdnLkrJwAWPxWyv42GTg5kLWGqbYoSAaKy/Zv5INp58d1C19YQPgeQn+SOhLVBYyCWPPGjTVR1CnUfs5yo4hcCRWUTWTtyPk6X67aEBhhVdMVKmg+KSSOefRN4sg)
#    access-token: ENC(kf8jEacAQM03nhNRYSBxdrI4mMj2C9gPJBRh8GJkLP8ODo50XLNZcZR9VOXyNfZUlI2GfNsXfyJp+C1T6A3Wjkl8w9ZB0BuahKBk/3ucnVMgVyb092GLS3v1wNpTBY4M)
#    access-token-secret: ENC(nFwJwPzt6VM70PLfPKXzhMp3e5Owu81pfA07ot0l0eI7y2WjQhIy26/SRzcNCXtB9dIt7NDnmQ1eGOr0ojvzvxgJO2Y0cUXJ+Wb7JvMZIsQ=)